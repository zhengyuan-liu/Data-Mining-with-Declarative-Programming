db2 "CONNECT TO SAMPLE"

db2 "CALL drop_table_if_exists('DIS2_COL')"
db2 "CREATE TABLE DIS2_COL (TEST_PID INTEGER, TRAIN_PID INTEGER, TRAIN_LABEL INTEGER, COL_ID INTEGER, DIS2 DOUBLE)"

db2 "INSERT INTO DIS2_COL
(SELECT VTEST.PID, VTRAIN.PID, TRAIN_LABEL.PLabel, VTEST.COLID, 
	(VTEST.COLVALUE - VTRAIN.COLVALUE) * (VTEST.COLVALUE - VTRAIN.COLVALUE) AS DIS2
FROM VTEST, VTRAIN, TRAIN_LABEL
WHERE VTEST.COLID = VTRAIN.COLID AND VTRAIN.PID = TRAIN_LABEL.PID
)"


db2 "CALL drop_table_if_exists('DIS2')"
db2 "CREATE TABLE DIS2 (TEST_PID INTEGER, TRAIN_PID INTEGER, TRAIN_LABEL INTEGER, DIS2 DOUBLE)"

db2 "INSERT INTO DIS2
(SELECT TEST_PID, TRAIN_PID, TRAIN_LABEL, SUM(DIS2) AS DIS2
FROM DIS2_COL
GROUP BY TEST_PID, TRAIN_PID, TRAIN_LABEL
)"


db2 "CALL drop_table_if_exists('KNN')"
db2 "CREATE TABLE KNN (TEST_PID INTEGER, TRAIN_PID INTEGER, TRAIN_LABEL INTEGER)"

db2 "INSERT INTO KNN
(SELECT TEST_PID, TRAIN_PID, TRAIN_LABEL FROM DIS2 AS A
WHERE 
	(SELECT COUNT(*) FROM DIS2 
	WHERE TEST_PID = A.TEST_PID AND DIS2 < A.DIS2) < (SELECT K FROM K)
)"


db2 "CALL drop_table_if_exists('VOTE')"
db2 "CREATE TABLE VOTE (TEST_PID INTEGER, TRAIN_LABEL INTEGER, NUM INTEGER)"

db2 "INSERT INTO VOTE
(SELECT TEST_PID, TRAIN_LABEL, COUNT(TRAIN_PID) AS NUM
FROM KNN
GROUP BY TEST_PID, TRAIN_LABEL
)"

db2 "CALL drop_table_if_exists('RESULTS')"
db2 "CREATE TABLE RESULTS (TEST_PID INTEGER, PREDICTED_CLASS INTEGER)"

db2 "INSERT INTO RESULTS
(SELECT TEST_PID, TRAIN_LABEL
FROM VOTE AS A
WHERE NUM = 
	(SELECT MAX(NUM) FROM VOTE
	WHERE TEST_PID = A.TEST_PID)
)"


db2 "CALL drop_table_if_exists('ACCURACY')"
db2 "CREATE OR REPLACE PROCEDURE get_accuracy()
LANGUAGE SQL
BEGIN
	DECLARE test_count INTEGER;
	DECLARE true_count INTEGER;
	DECLARE accuracy DECIMAL(9, 2);
	SELECT COUNT(*) INTO test_count
	FROM TEST_LABEL;
	SELECT COUNT(*) INTO true_count
	FROM TEST_LABEL, RESULTS
	WHERE TEST_LABEL.PID = RESULTS.TEST_PID AND TEST_LABEL.PLabel = RESULTS.PREDICTED_CLASS;
	SET accuracy = 1.0 * true_count / test_count;
	CREATE TABLE ACCURACY (TEST_NUMBER INTEGER, TRUE_CLASSIFIED INTEGER, ACCURACY DOUBLE);
	INSERT INTO ACCURACY VALUES
	(test_count, true_count, accuracy);
END"

db2 "CALL get_accuracy()"
db2 "SELECT * FROM ACCURACY"
