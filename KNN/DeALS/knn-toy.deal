database( { train(Id:integer, ColId:integer, Value:float),
            train_labels(Id:integer, Label:integer),
            test(Id:integer, ColId:integer, Value:float),
            test_labels(Id:integer, Label:integer),
            define_k(K:integer)
          } ).

define_k(3).

train(1,1,1317.265789).
train(1,2,1315.220951).
train(1,3,1312.770581).
train(1,4,1309.834252).
train_labels(1,0).

train(2,1,7329.967624).
train(2,2,7379.907443).
train(2,3,7441.799231).
train(2,4,7518.503422).
train_labels(2,1).

train(3,1,809.4214096).
train(3,2,809.7801194).
train(3,3,810.2071911).
train(3,4,810.7156529).
train_labels(3,1).

test(1,1,1041.990593).
test(1,2,1039.850024).
test(1,3,1037.136237).
test(1,4,1033.695733).
test_labels(1,1).

test(2,1,1041.990593).
test(2,2,1039.850024).
test(2,3,1037.136237).
test(2,4,1033.695733).
test_labels(2,0).

% Compute distance
dis2_col(Id1, Id2, Col, D2) <- test(Id1, Col, V1), train(Id2, Col, V2), D2 = (V1-V2) * (V1-V2).
dis2(Id1, Id2, sum<D2>) <- dis2_col(Id1, Id2, Col, D2).

% KNN classification
smaller_count(Id, Train_id1, count<Train_id2>) <- dis2(Id, Train_id1, D1), dis2(Id, Train_id2, D2), D2 < D1.
knn(Id, Train_id, Label) <- train_labels(Train_id, Label), test_labels(Id, _), ~smaller_count(Id, Train_id, C). % Min Dis
knn(Id, Train_id, Label) <- train_labels(Train_id, Label), smaller_count(Id, Train_id, C), define_k(K), C < K.

vote(Id, Label, count<Train_id>) <- knn(Id, Train_id, Label).
not_max(Id, Label1) <- vote(Id, Label1, C1), vote(Id, Label2, C2), C1 < C2.
knn_classify(Id, min<Label>) <- vote(Id, Label, C), ~not_max(Id, Label). % If there is multiply choices, return the min index

export knn_classify(Id, Label).
query knn_classify(Id, Label).

% Compute accuracy
true_classify(count<Id>) <- knn_classify(Id, Label), test_labels(Id, Label).
test_count(count<Id>) <- test_labels(Id, _).
accuracy(A) <- true_classify(T), test_count(C), A = 1.0 * T / C.

export accuracy(A).
query accuracy(A).